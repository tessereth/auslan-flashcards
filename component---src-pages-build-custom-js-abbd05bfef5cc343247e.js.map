{"version":3,"sources":["webpack:///./src/pages/build-custom.js","webpack:///./src/components/title-bar.js"],"names":["DragHandle","SortableHandle","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","WordInput","SortableElement","_ref","word","onWordChange","onDelete","type","placeholder","value","get","onChange","e","target","ref","aria-label","onClick","WordListInput","SortableContainer","_ref2","words","map","index","key","field","blankWord","Map","title","web","video","focusRef","React","createRef","Form","state","name","List","onSortEnd","_ref3","oldIndex","newIndex","toMove","_this","setState","delete","insert","setIn","onNameChange","event","onAdd","push","current","focus","serializedDeck","filter","length","replace","btoa","JSON","stringify","componentDidMount","URLSearchParams","params","this","props","search","has","deck","parse","atob","render","toArray","useDragHandle","gatsby__WEBPACK_IMPORTED_MODULE_9__","to","PureComponent","BuildCustom","_ref4","location","_components_layout__WEBPACK_IMPORTED_MODULE_10__","_components_title_bar__WEBPACK_IMPORTED_MODULE_11__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","TitleBar","children"],"mappings":"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","file":"component---src-pages-build-custom-js-abbd05bfef5cc343247e.js","sourcesContent":["import React from 'react'\nimport {\n  SortableElement,\n  SortableContainer,\n  SortableHandle,\n} from 'react-sortable-hoc'\nimport { List, Map } from 'immutable'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport TitleBar from '../components/title-bar'\n\nconst DragHandle = SortableHandle(() => (\n  <span className=\"button\">&#x2630;</span>\n))\n\nconst WordInput = SortableElement(({ word, onWordChange, onDelete }) => (\n  <li className=\"field is-horizontal\">\n    <div className=\"field-body\">\n      <div className=\"field has-addons\">\n        <div className=\"control\">\n          <DragHandle />\n        </div>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Same\"\n            value={word.get('title')}\n            onChange={e => onWordChange('title', e.target.value)}\n            ref={word.get('focusRef')}\n          />\n        </div>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"16020_1\"\n            value={word.get('video')}\n            onChange={e => onWordChange('video', e.target.value)}\n          />\n        </div>\n        <div className=\"control is-expanded\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"http://www.auslan.org.au/dictionary/words/same-2.html\"\n            value={word.get('web')}\n            onChange={e => onWordChange('web', e.target.value)}\n          />\n        </div>\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            aria-label=\"delete\"\n            onClick={onDelete}\n          >\n            <span className=\"delete\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  </li>\n))\n\nconst WordListInput = SortableContainer(({ words, onWordChange, onDelete }) => {\n  return (\n    <ul>\n      {words.map((word, index) => (\n        <WordInput\n          key={`item-${index}`}\n          index={index}\n          word={word}\n          onWordChange={(field, value) => onWordChange(index, field, value)}\n          onDelete={() => onDelete(index)}\n        />\n      ))}\n    </ul>\n  )\n})\n\nconst blankWord = Map({\n  title: '',\n  web: '',\n  video: '',\n  focusRef: React.createRef(),\n})\n\nclass Form extends React.PureComponent {\n  state = {\n    name: 'my custom deck',\n    words: List([blankWord]),\n  }\n\n  componentDidMount() {\n    if (typeof URLSearchParams !== 'undefined') {\n      let params = new URLSearchParams(this.props.search)\n      if (params.has('deck')) {\n        const deck = JSON.parse(atob(params.get('deck')))\n        this.setState({\n          name: deck.name || '',\n          words: List(\n            deck.words.map(word =>\n              Map({\n                title: word.title || '',\n                web: 'http://www.auslan.org.au/dictionary/words/' + word.web,\n                video: word.video || '',\n                focusRef: React.createRef(),\n              })\n            )\n          ),\n        })\n      }\n    }\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const toMove = this.state.words.get(oldIndex)\n    this.setState({\n      words: this.state.words.delete(oldIndex).insert(newIndex, toMove),\n    })\n  }\n\n  onWordChange = (index, field, value) => {\n    this.setState({\n      words: this.state.words.setIn([index, field], value),\n    })\n  }\n\n  onNameChange = event => {\n    this.setState({\n      words: event.target.value,\n    })\n  }\n\n  onAdd = () => {\n    this.setState(\n      {\n        words: this.state.words.push(blankWord),\n      },\n      () => {\n        this.state.words\n          .get(-1)\n          .get('focusRef')\n          .current.focus()\n      }\n    )\n  }\n\n  onDelete = index => {\n    this.setState({\n      words: this.state.words.delete(index),\n    })\n  }\n\n  serializedDeck = () => {\n    // ignore anything missing a title/url\n    const words = this.state.words\n      .filter(\n        word =>\n          word.get('title').length > 0 &&\n          word.get('web').length > 0 &&\n          word.get('video').length > 0\n      )\n      .map(word =>\n        Map({\n          web: word\n            .get('web')\n            .replace('http://www.auslan.org.au/dictionary/words/', ''),\n          title: word.get('title'),\n          video: word.get('video'),\n        })\n      )\n    if (typeof btoa === 'undefined') {\n      return JSON.stringify({ name: this.state.name, words: words })\n    } else {\n      return btoa(JSON.stringify({ name: this.state.name, words: words }))\n    }\n  }\n\n  render() {\n    return (\n      <form>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <div className=\"control is-expanded\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              onChange={this.onNameChange}\n              value={this.state.name}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Words</label>\n          <div className=\"control\">\n            <WordListInput\n              words={this.state.words.toArray()}\n              onSortEnd={this.onSortEnd}\n              onWordChange={this.onWordChange}\n              onDelete={this.onDelete}\n              useDragHandle\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"control\">\n            <div className=\"level is-mobile\">\n              <div className=\"level-left\">\n                <button type=\"button\" className=\"button\" onClick={this.onAdd}>\n                  Add word\n                </button>\n              </div>\n              <div className=\"level-right\">\n                <Link\n                  to={`/custom/word?deck=${this.serializedDeck()}`}\n                  className=\"button is-primary\"\n                >\n                  View\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nconst BuildCustom = ({ location }) => {\n  return (\n    <Layout>\n      <TitleBar>\n        <h1 className=\"title\">Build custom flashcard deck</h1>\n      </TitleBar>\n      <section className=\"section\">\n        <div className=\"container\">\n          <Form search={location.search} />\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default BuildCustom\n","import React from 'react'\n\nconst TitleBar = ({ children }) => {\n  return (\n    <section className=\"hero is-primary is-small\">\n      <div className=\"hero-body\">\n        <div className=\"container\">{children}</div>\n      </div>\n    </section>\n  )\n}\n\nexport default TitleBar\n"],"sourceRoot":""}