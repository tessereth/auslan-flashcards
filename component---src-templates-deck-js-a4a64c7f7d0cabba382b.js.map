{"version":3,"sources":["webpack:///./src/templates/deck.js","webpack:///./src/components/title-bar.js","webpack:///./src/components/video.js"],"names":["__webpack_exports__","_ref","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_title_bar__WEBPACK_IMPORTED_MODULE_7__","className","decksYaml","name","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","words","map","word","key","id","title","_components_video__WEBPACK_IMPORTED_MODULE_6__","autoPlay","_components_external_link__WEBPACK_IMPORTED_MODULE_5__","href","web","query","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","TitleBar","children","mediaPath","mediaRef","startsWith","slice","Video","props","_this","_React$PureComponent","call","this","vjsDefaultOptions","playbackRates","preload","loop","controls","muted","videoRef","React","createRef","componentDidMount","player","videojs","current","componentWillUnmount","dispose","componentDidUpdate","prevProps","prevState","revealed","play","pause","render","_this$props","other","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_4___default","Object","assign","poster","video","ref","src","type","target","rel","PureComponent","defaultProps"],"mappings":"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","file":"component---src-templates-deck-js-a4a64c7f7d0cabba382b.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport ExternalLink from '../components/external-link'\nimport Video from '../components/video'\nimport TitleBar from '../components/title-bar'\n\nconst Deck = ({ data }) => {\n  return (\n    <Layout>\n      <TitleBar>\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <h1 className=\"title\">{data.decksYaml.name}</h1>\n          </div>\n          <div className=\"level-right\">\n            <div className=\"buttons\">\n              <Link\n                to={data.decksYaml.fields.slug + '/sign/1'}\n                className=\"button is-primary is-outlined is-inverted\"\n              >\n                Guess sign\n              </Link>\n              <Link\n                to={data.decksYaml.fields.slug + '/word/1'}\n                className=\"button is-primary is-outlined is-inverted\"\n              >\n                Guess word\n              </Link>\n            </div>\n          </div>\n        </div>\n      </TitleBar>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns is-multiline\">\n            {data.decksYaml.words.map(word => (\n              <div key={word.id} className=\"column is-half is-one-third-fullhd\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <div className=\"card-header-title has-text-centered is-block\">\n                      <strong className=\"is-size-4\">\n                        {word.title || word.id}\n                      </strong>\n                    </div>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"flashcard__content flashcard__content--video\">\n                      <Video word={word} autoPlay={false} />\n                    </div>\n                  </div>\n                  <div className=\"card-footer\">\n                    <ExternalLink href={word.web} className=\"card-footer-item\">\n                      Signbank\n                    </ExternalLink>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default Deck\n\nexport const query = graphql`\n  query($slug: String!) {\n    decksYaml(fields: { slug: { eq: $slug } }) {\n      name\n      fields {\n        slug\n      }\n      words {\n        id\n        title\n        video\n        web\n      }\n    }\n  }\n`\n","import React from 'react'\n\nconst TitleBar = ({ children }) => {\n  return (\n    <section className=\"hero is-primary is-small\">\n      <div className=\"hero-body\">\n        <div className=\"container\">{children}</div>\n      </div>\n    </section>\n  )\n}\n\nexport default TitleBar\n","import React from 'react'\nimport videojs from 'video.js'\n\nconst mediaPath = mediaRef => {\n  // If it's already a url, just return it\n  if (mediaRef.startsWith('http')) {\n    return mediaRef\n  }\n  let base\n  if (mediaRef.slice(-2) === '_1') {\n    base = 'http://media.auslan.org.au/mp4video'\n  } else {\n    base = 'http://media.auslan.org.au/auslan'\n  }\n  return `${base}/${mediaRef.slice(0, 2)}/${mediaRef}`\n}\n\nclass Video extends React.PureComponent {\n  vjsDefaultOptions = {\n    playbackRates: [0.25, 0.5, 1.0, 1.5],\n    preload: 'auto',\n    loop: true,\n    controls: true,\n    muted: true,\n  }\n\n  constructor(props) {\n    super(props)\n    this.videoRef = React.createRef()\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.videoRef.current, this.vjsDefaultOptions)\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose()\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.revealed !== this.props.revealed) {\n      if (this.props.revealed) {\n        this.player.play()\n      } else {\n        this.player.pause()\n      }\n    }\n  }\n\n  render() {\n    const { word, revealed, ...other } = this.props\n    return (\n      <video\n        id={`flashcard-video-${word.id}`}\n        className=\"video-js vjs-fill\"\n        poster={`${mediaPath(word.video)}.jpg`}\n        ref={this.videoRef}\n        autoPlay={revealed}\n        {...other}\n      >\n        <source src={`${mediaPath(word.video)}.mp4`} type=\"video/mp4\" />\n        <p className=\"vjs-no-js\">\n          To view this video please enable JavaScript, and consider upgrading to\n          a web browser that\n          <a\n            href=\"https://videojs.com/html5-video-support/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            supports HTML5 video\n          </a>\n        </p>\n      </video>\n    )\n  }\n}\n\nVideo.defaultProps = {\n  revealed: true,\n}\n\nexport default Video\n"],"sourceRoot":""}