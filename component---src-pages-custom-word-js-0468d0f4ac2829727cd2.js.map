{"version":3,"sources":["webpack:///./src/pages/custom/word.js","webpack:///./src/components/title-bar.js","webpack:///./src/components/video.js","webpack:///./src/components/flashcard.js","webpack:///./src/components/flashcard-title-bar.js","webpack:///./src/components/flashcard-scene.js","webpack:///./src/utils/custom-deck-from-query.js"],"names":["CustomWord","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_flashcard_scene__WEBPACK_IMPORTED_MODULE_2__","slug","guess","deck","customDeckFromQuery","location","search","custom","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","TitleBar","_ref","children","className","mediaPath","mediaRef","startsWith","slice","Video","_this","_React$PureComponent","call","this","vjsDefaultOptions","playbackRates","preload","loop","controls","muted","videoRef","React","createRef","componentDidMount","player","videojs","current","componentWillUnmount","dispose","componentDidUpdate","prevProps","prevState","revealed","play","pause","render","_this$props","word","other","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_4___default","Object","assign","id","poster","video","ref","autoPlay","src","type","href","target","rel","PureComponent","defaultProps","WordCard","react_default","classnames","flashcard--hidden","title","VideoCard","_ref2","HiddenCard","_ref3","reveal","onClick","Flashcard","_ref4","wordFirst","flashcard_WordCard","flashcard_VideoCard","flashcard_HiddenCard","propTypes","PropTypes","shape","string","isRequired","bool","func","FlashcardTitleBar","otherGuess","title_bar","name","gatsby_browser_entry","to","FlashcardScene","state","e","preventDefault","setState","unreveal","idxUrl","idx","gotoIdx","navigate","linkToIdx","text","objectWithoutPropertiesLoose_default","words","length","disabled","right","isLast","left","isFirst","onKeyDownNative","key","URLSearchParams","urlParams","parseInt","get","seed","undefined","_seed","params","has","Math","floor","random","shuffle","set","toString","document","addEventListener","removeEventListener","_this$props2","layout","flashcard_title_bar","flashcard","object","web","JSON","parse","atob","forEach","index","String"],"mappings":"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","file":"component---src-pages-custom-word-js-0468d0f4ac2829727cd2.js","sourcesContent":["import React from 'react'\nimport FlashcardScene from '../../components/flashcard-scene'\nimport customDeckFromQuery from '../../utils/custom-deck-from-query'\n\nconst CustomWord = props => {\n  return (\n    <FlashcardScene\n      slug=\"custom\"\n      guess=\"word\"\n      deck={customDeckFromQuery(props.location.search)}\n      search={props.location.search}\n      custom\n    />\n  )\n}\n\nexport default CustomWord\n","import React from 'react'\n\nconst TitleBar = ({ children }) => {\n  return (\n    <section className=\"hero is-primary is-small\">\n      <div className=\"hero-body\">\n        <div className=\"container\">{children}</div>\n      </div>\n    </section>\n  )\n}\n\nexport default TitleBar\n","import React from 'react'\nimport videojs from 'video.js'\n\nconst mediaPath = mediaRef => {\n  // If it's already a url, just return it\n  if (mediaRef.startsWith('http')) {\n    return mediaRef\n  }\n  let base\n  if (mediaRef.slice(-2) === '_1') {\n    base = 'http://media.auslan.org.au/mp4video'\n  } else {\n    base = 'http://media.auslan.org.au/auslan'\n  }\n  return `${base}/${mediaRef.slice(0, 2)}/${mediaRef}`\n}\n\nclass Video extends React.PureComponent {\n  vjsDefaultOptions = {\n    playbackRates: [0.25, 0.5, 1.0, 1.5],\n    preload: 'auto',\n    loop: true,\n    controls: true,\n    muted: true,\n  }\n\n  constructor(props) {\n    super(props)\n    this.videoRef = React.createRef()\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.videoRef.current, this.vjsDefaultOptions)\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose()\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.revealed !== this.props.revealed) {\n      if (this.props.revealed) {\n        this.player.play()\n      } else {\n        this.player.pause()\n      }\n    }\n  }\n\n  render() {\n    const { word, revealed, ...other } = this.props\n    return (\n      <video\n        id={`flashcard-video-${word.id}`}\n        className=\"video-js vjs-fill\"\n        poster={`${mediaPath(word.video)}.jpg`}\n        ref={this.videoRef}\n        autoPlay={revealed}\n        {...other}\n      >\n        <source src={`${mediaPath(word.video)}.mp4`} type=\"video/mp4\" />\n        <p className=\"vjs-no-js\">\n          To view this video please enable JavaScript, and consider upgrading to\n          a web browser that\n          <a\n            href=\"https://videojs.com/html5-video-support/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            supports HTML5 video\n          </a>\n        </p>\n      </video>\n    )\n  }\n}\n\nVideo.defaultProps = {\n  revealed: true,\n}\n\nexport default Video\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Video from './video'\n\nconst WordCard = ({ word, revealed }) => (\n  <div className={classnames('flashcard', { 'flashcard--hidden': !revealed })}>\n    <div className=\"flashcard__content flashcard__content--word\">\n      <h1 className=\"title\">{word.title || word.id}</h1>\n    </div>\n  </div>\n)\n\nconst VideoCard = ({ word, revealed }) => (\n  <div className={classnames('flashcard', { 'flashcard--hidden': !revealed })}>\n    <div className=\"flashcard__content flashcard__content--video\">\n      <Video word={word} revealed={revealed} />\n    </div>\n  </div>\n)\n\nconst HiddenCard = ({ reveal }) => (\n  <button className=\"flashcard flashcard--reveal\" onClick={reveal}>\n    <div className=\"flashcard__content flashcard__content--reveal\">\n      <p className=\"subtitle\">Reveal</p>\n    </div>\n  </button>\n)\n\nconst Flashcard = ({ word, wordFirst, revealed, reveal }) => {\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-centered\">\n        {wordFirst ? (\n          <WordCard word={word} revealed />\n        ) : (\n          <VideoCard word={word} revealed />\n        )}\n      </div>\n      <div className=\"column is-centered\">\n        {wordFirst ? (\n          <VideoCard word={word} revealed={revealed} />\n        ) : (\n          <WordCard word={word} revealed={revealed} />\n        )}\n        {!revealed && <HiddenCard reveal={reveal} />}\n      </div>\n    </div>\n  )\n}\n\nFlashcard.propTypes = {\n  word: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    video: PropTypes.string.isRequired,\n  }).isRequired,\n  wordFirst: PropTypes.bool,\n  revealed: PropTypes.bool,\n  reveal: PropTypes.func.isRequired,\n}\n\nexport default Flashcard\n","import React from 'react'\nimport TitleBar from './title-bar'\nimport { Link } from 'gatsby'\n\nconst FlashcardTitleBar = ({ deck, slug, guess, custom, search }) => {\n  const otherGuess = guess === 'word' ? 'sign' : 'word'\n\n  return (\n    <TitleBar>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <h1 className=\"title\">{deck.name}</h1>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"buttons\">\n            <Link\n              to={`/${slug}/${otherGuess}?${search}`}\n              className=\"button is-primary is-outlined is-inverted\"\n            >\n              {`Guess ${otherGuess}`}\n            </Link>\n            {custom ? (\n              <Link\n                to={`/build-custom?${search}`}\n                className=\"button is-primary is-outlined is-inverted\"\n              >\n                Edit\n              </Link>\n            ) : (\n              <Link\n                to={`/${slug}`}\n                className=\"button is-primary is-outlined is-inverted\"\n              >\n                View all\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    </TitleBar>\n  )\n}\n\nexport default FlashcardTitleBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, navigate } from 'gatsby'\nimport { shuffle } from 'shuffle-seed'\n\nimport Layout from '../components/layout'\nimport Flashcard from '../components/flashcard'\nimport TitleBar from '../components/title-bar'\nimport FlashcardTitleBar from './flashcard-title-bar'\n\nclass FlashcardScene extends React.PureComponent {\n  state = { revealed: false }\n\n  reveal = e => {\n    if (e) e.preventDefault()\n    this.setState({\n      revealed: true,\n    })\n  }\n\n  unreveal = e => {\n    if (e) e.preventDefault()\n    this.setState({\n      revealed: false,\n    })\n  }\n\n  idxUrl = idx => {\n    const { slug, guess } = this.props\n    return `/${slug}/${guess}?${this.search(idx)}`\n  }\n\n  gotoIdx = idx => {\n    this.unreveal()\n    navigate(this.idxUrl(idx))\n  }\n\n  linkToIdx = ({ idx, text, ...other }) => {\n    if (idx < 0 || idx >= this.props.deck.words.length) {\n      return (\n        <button disabled {...other}>\n          {text}\n        </button>\n      )\n    } else {\n      return (\n        <Link\n          to={this.idxUrl(idx)}\n          onClick={() => this.gotoIdx(idx)}\n          {...other}\n        >\n          {text}\n        </Link>\n      )\n    }\n  }\n\n  right = e => {\n    if (this.isLast() && this.state.revealed) {\n      // do nothing\n    } else if (this.state.revealed) {\n      this.gotoIdx(this.idx() + 1)\n    } else {\n      this.reveal(e)\n    }\n  }\n\n  left = e => {\n    if (this.isFirst() && !this.state.revealed) {\n      // do nothing\n    } else if (this.state.revealed) {\n      this.unreveal(e)\n    } else {\n      this.gotoIdx(this.idx() - 1)\n    }\n  }\n\n  isFirst = () => this.idx() === 0\n\n  isLast = () => this.idx() === this.props.deck.words.length - 1\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDownNative)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDownNative)\n  }\n\n  onKeyDownNative = e => {\n    if (e.key === 'ArrowLeft') {\n      this.left()\n    } else if (e.key === 'ArrowRight') {\n      this.right()\n    }\n  }\n\n  idx = () => {\n    if (typeof URLSearchParams === 'undefined') {\n      return 0\n    }\n    const urlParams = new URLSearchParams(this.props.search)\n    const idx = parseInt(urlParams.get('idx') || '0')\n    if (idx < 0) {\n      return 0\n    } else if (idx >= this.props.deck.words.length) {\n      return this.props.deck.words.length - 1\n    } else {\n      return idx\n    }\n  }\n\n  seed = () => {\n    if (this._seed === undefined) {\n      if (typeof URLSearchParams === 'undefined') {\n        this._seed = 0\n        return this._seed\n      }\n      let params = new URLSearchParams(this.props.search)\n      if (params.has('seed')) {\n        this._seed = params.get('seed')\n      } else {\n        this._seed = Math.floor(Math.random() * 10000)\n      }\n    }\n    return this._seed\n  }\n\n  words = () => {\n    return shuffle(this.props.deck.words, this.seed())\n  }\n\n  search = idx => {\n    if (typeof URLSearchParams === 'undefined') {\n      return ''\n    }\n    let params = new URLSearchParams(this.props.search)\n    params.set('idx', idx)\n    params.set('seed', this.seed())\n    return params.toString()\n  }\n\n  render() {\n    const { slug, guess } = this.props\n    const idx = this.idx()\n    const word = this.words()[idx]\n    return (\n      <Layout>\n        <FlashcardTitleBar {...this.props} search={this.search(0)} />\n        <section className=\"section\">\n          <div className=\"container\">\n            <Flashcard\n              key={word.id}\n              word={word}\n              wordFirst={guess === 'sign'}\n              reveal={this.reveal}\n              revealed={this.state.revealed}\n            />\n            <div className=\"level is-mobile\">\n              <div className=\"level-left\">\n                {this.linkToIdx({\n                  idx: idx - 1,\n                  text: 'Previous',\n                  className: 'button',\n                })}\n              </div>\n              <div className=\"level-right\">\n                {this.isLast() ? (\n                  <Link className=\"button is-success\" to={`/${slug}`}>\n                    Done!\n                  </Link>\n                ) : (\n                  this.linkToIdx({\n                    idx: idx + 1,\n                    text: 'Next',\n                    className: 'button is-primary',\n                  })\n                )}\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nFlashcardScene.propTypes = {\n  slug: PropTypes.string.isRequired,\n  guess: PropTypes.string.isRequired,\n  deck: PropTypes.object.isRequired,\n  search: PropTypes.string.isRequired,\n}\n\nexport default FlashcardScene\n","const customDeckFromQuery = search => {\n  let deck\n  if (typeof URLSearchParams === 'undefined') {\n    deck = {\n      name: 'test',\n      words: [{ title: 'test', video: '1234', web: 'http://example.com' }],\n    }\n  } else {\n    const urlParams = new URLSearchParams(search)\n    deck = JSON.parse(atob(urlParams.get('deck')))\n  }\n  deck.words.forEach((word, index) => {\n    word.id = String(index)\n  })\n  return deck\n}\n\nexport default customDeckFromQuery\n"],"sourceRoot":""}